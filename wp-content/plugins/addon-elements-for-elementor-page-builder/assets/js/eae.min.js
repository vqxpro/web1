jQuery(window).on("elementor/frontend/init", function () {
  elementorFrontend.hooks.addAction(
    "frontend/element_ready/wts-gmap.default",
    function (e) {
      var t = e.find(".eae-markers");
      0 != t.length &&
        (map = (function (a) {
          var n = (t = e.find(".eae-markers")).data("zoom"),
            i = a.find(".marker"),
            r = t.data("style"),
            o =
              (t.data("scroll"),
              {
                zoom: n,
                center: new google.maps.LatLng(0, 0),
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                styles: r,
              }),
            s = new google.maps.Map(a[0], o);
          return (
            (s.markers = []),
            i.each(function () {
              !(function (a, n) {
                var i = t.data("animate");
                t.data("show-info-window-onload");
                t = e.find(".eae-markers");
                var r = new google.maps.LatLng(
                  a.attr("data-lat"),
                  a.attr("data-lng")
                );
                if (((icon_img = a.attr("data-icon")), "" != icon_img))
                  var o = {
                    url: a.attr("data-icon"),
                    scaledSize: new google.maps.Size(
                      a.attr("data-icon-size"),
                      a.attr("data-icon-size")
                    ),
                  };
                var s = new google.maps.Marker({
                  position: r,
                  map: n,
                  icon: o,
                  animation: google.maps.Animation.DROP,
                });
                "animate-yes" == i &&
                  "yes" != a.data("info-window") &&
                  s.setAnimation(google.maps.Animation.BOUNCE);
                "animate-yes" == i &&
                  google.maps.event.addListener(s, "click", function () {
                    s.setAnimation(null);
                  });
                if ((n.markers.push(s), a.html())) {
                  var l = new google.maps.InfoWindow({
                    content: a.html(),
                  });
                  "yes" == a.data("info-window") && l.open(n, s),
                    google.maps.event.addListener(s, "click", function () {
                      l.open(n, s);
                    });
                }
                "animate-yes" == i &&
                  google.maps.event.addListener(l, "closeclick", function () {
                    s.setAnimation(google.maps.Animation.BOUNCE);
                  });
              })(jQuery(this), s);
            }),
            (function (e, t) {
              var a = new google.maps.LatLngBounds();
              jQuery.each(e.markers, function (e, t) {
                var n = new google.maps.LatLng(
                  t.position.lat(),
                  t.position.lng()
                );
                a.extend(n);
              }),
                1 == e.markers.length
                  ? (e.setCenter(a.getCenter()), e.setZoom(t))
                  : e.fitBounds(a);
            })(s, n),
            s
          );
        })(e.find(".eae-markers")));
    }
  ),
    elementorFrontend.hooks.addAction(
      "frontend/element_ready/global",
      function (e) {
        var t,
          a,
          n,
          i,
          r,
          o,
          s,
          l = [],
          d = [],
          c = e.data("id"),
          p = e.data("eae-slider"),
          f = jQuery(
            ".elementor-element-" + c + "[data-eae-slider='" + p + "']"
          )
            .children(".aepro-section-bs")
            .children(".aepro-section-bs-inner");
        f &&
          f.data("eae-bg-slider") &&
          ((slider_images = f.data("eae-bg-slider")),
          (t = f.data("eae-bg-slider-transition")),
          (a = f.data("eae-bg-slider-animation")),
          (i =
            ("yes" == (n = f.data("eae-bg-custom-overlay")) ||
              f.data("eae-bg-slider-overlay"),
            eae_editor.plugin_url +
              "assets/lib/vegas/overlays/" +
              f.data("eae-bg-slider-overlay"))),
          (r = f.data("eae-bg-slider-cover")),
          (o = f.data("eae-bs-slider-delay")),
          (s = f.data("eae-bs-slider-timer")),
          "undefined" != typeof slider_images &&
            ((l = slider_images.split(",")),
            jQuery.each(l, function (e, t) {
              var a = [];
              (a.src = t), d.push(a);
            }),
            f.vegas({
              slides: d,
              transition: t,
              animation: a,
              overlay: i,
              cover: r,
              delay: o,
              timer: s,
              init: function () {
                "yes" == n &&
                  f.children(".vegas-overlay").css("background-image", "");
              },
            })));
      }
    );
});
var isEditMode = !1,
  popupInstance = [];
!(function (e) {
  e(window).on("elementor/frontend/init", function () {
    var t = function (e) {
        e.find(".e-con").each(function () {
          elementorFrontend.elementsHandler.runReadyTrigger(jQuery(this));
        }),
          e.find(".elementor-section").each(function () {
            elementorFrontend.elementsHandler.runReadyTrigger(jQuery(this));
          }),
          e.find(".elementor-column").each(function () {
            elementorFrontend.elementsHandler.runReadyTrigger(jQuery(this));
          }),
          e.find(".elementor-widget").each(function () {
            elementorFrontend.elementsHandler.runReadyTrigger(jQuery(this));
          });
      },
      a = function (e, t) {
        function a(e) {
          ($icons = t(document).find(e).find(".eae-ic-icon-wrap")),
            window.innerWidth < 767
              ? $icons.each(function (e, a) {
                  t(a).css("top", t(a).height() / 2 + 8 + "px"),
                    t(a)
                      .next(".eae-info-circle-item__content-wrap")
                      .css("padding-top", t(a).height() / 2 + 8 + "px");
                })
              : $icons.each(function (e, a) {
                  t(a).css("margin-left", -0.5 * t(a).outerWidth()),
                    t(a).css("margin-top", -0.5 * t(a).outerHeight()),
                    ($a = (function (e) {
                      return (
                        (e = ((e - 90) * Math.PI) / 180),
                        {
                          x: 50 + 45 * Math.cos(e),
                          y: 50 + 45 * Math.sin(e),
                        }
                      );
                    })($angle)),
                    ($b = 360 / $icons.length),
                    t(a).css("left", $a.x + "%"),
                    t(a).css("top", $a.y + "%"),
                    ($angle += $b);
                });
        }
        ($wrap_class = ".elementor-element-" + e.data("id")),
          ($angle = 0),
          a(e);
        var n = null;

        function i() {
          "yes" == e.find(".eae-info-circle").data("autoplay") &&
            (n = setInterval(r, $autoplayDuration));
        }

        function r() {
          e.find(".eae-active").next().length > 0
            ? e
                .find(".eae-active")
                .next()
                .addClass("eae-active")
                .siblings()
                .removeClass("eae-active")
            : e
                .find(".eae-info-circle-item")
                .eq(0)
                .addClass("eae-active")
                .siblings()
                .removeClass("eae-active");
        }
        ($autoplayDuration = e.find(".eae-info-circle").data("delay")),
          i(),
          e.find(".eae-ic-icon-wrap").hover(
            function () {
              clearInterval(n);
            },
            function () {
              i();
            }
          ),
          e.find(".eae-info-circle-item").length > 0 &&
            t(e.find(".eae-info-circle-item")[0]).addClass("eae-active"),
          e.find(".eae-ic-icon-wrap").on("click", function () {
            e.find(".eae-info-circle-item").removeClass("eae-active"),
              t(this).parent().addClass("eae-active");
          }),
          e.hasClass("eae-mouseenter-yes") &&
            e.find(".eae-ic-icon-wrap").on("mouseenter", function () {
              e.find(".eae-info-circle-item").removeClass("eae-active"),
                t(this).parent().addClass("eae-active");
            }),
          window.addEventListener("resize", a.bind(this, $wrap_class));
      },
      n = function (e, t) {
        const a = ".elementor-element-" + e.data("id"),
          n = document.querySelector(a),
          i = n.querySelector(".eae-timeline"),
          r = i.dataset.topOffset,
          o = n.querySelectorAll(".eae-timeline-item"),
          s = n.querySelectorAll(".eae-tl-icon-wrapper"),
          l = n.querySelector(".eae-timline-progress-bar");
        n.querySelector(".eae-pb-inner-line"),
          s[s.length - 1].getBoundingClientRect().bottom;

        function d() {
          const e = o[0].getBoundingClientRect(),
            t =
              (o[o.length - 1].getBoundingClientRect(),
              s[0].getBoundingClientRect().bottom - e.top),
            a = s[0].getBoundingClientRect(),
            n = s[0].offsetLeft + s[0].offsetWidth / 2,
            i = s[s.length - 1].getBoundingClientRect();
          (l.style.height = i.top - a.bottom + "px"),
            (l.style.top = t + "px"),
            (l.style.left = n + "px"),
            (l.style.display = "block");
        }

        function c() {
          const e = n.querySelector(".eae-pb-inner-line"),
            t = Math.abs(window.scrollY + parseFloat(r)),
            a = i.getBoundingClientRect().top + window.scrollY;
          s[s.length - 1].getBoundingClientRect().bottom, window.scrollY;
          t > a
            ? ((e.style.height = t - a + "px"),
              o.forEach((e, a) => {
                let n = e.getBoundingClientRect().top + window.scrollY;
                t > n
                  ? e.classList.add("eae-tl-item-focused")
                  : e.classList.remove("eae-tl-item-focused");
              }))
            : o[0].classList.remove("eae-tl-item-focused");
        }
        d(),
          c(),
          window.addEventListener("resize", () => {
            d();
          }),
          document.addEventListener("scroll", () => {
            window.requestAnimationFrame
              ? window.requestAnimationFrame(() => {
                  c();
                })
              : c();
          });
      };

    function i(e, t, a) {
      var n = new Date();
      n.setTime(n.getTime() + 60 * a * 60 * 1e3);
      var i = "expires=" + n.toUTCString();
      document.cookie = e + "=" + t + ";" + i + ";path=/";
    }

    function r(e) {
      for (
        var t = e + "=",
          a = decodeURIComponent(document.cookie).split(";"),
          n = 0;
        n < a.length;
        n++
      ) {
        for (var i = a[n]; " " == i.charAt(0); ) i = i.substring(1);
        if (0 == i.indexOf(t)) return i.substring(t.length, i.length);
      }
      return "";
    }
    var o = function (e, t) {
        ($is_rtl = jQuery("body").hasClass("rtl")),
          ($wrapper = e.find(".eae-progress-bar"));
        $wrapper.attr("data-skill");
        var a = $wrapper.attr("data-value"),
          n = $wrapper.attr("data-skin"),
          i =
            ($wrapper.find(".eae-pb-bar-skill"),
            $wrapper.find(".eae-pb-bar-value")),
          r = $wrapper.find(".eae-pb-bar"),
          o = $wrapper.find(".eae-pb-bar-inner");
        "skin1" === n && t(o).attr("style", "width : " + a + "%"),
          "skin2" === n && t(o).attr("style", "width : " + a + "%"),
          "skin3" === n &&
            (t(i).addClass("eae-pb-bar-value--aligned-value"),
            $is_rtl
              ? t(i).attr("style", "right :" + a + "%")
              : t(i).attr("style", "left :" + a + "%"),
            t(o).attr("style", "width :" + a + "%")),
          "skin4" === n &&
            (t(i).addClass("eae-pb-bar-value--aligned-value"),
            $is_rtl
              ? t(i).attr("style", "right :" + a + "%")
              : t(i).attr("style", "left :" + a + "%"),
            t(o).attr("style", "width :" + a + "%"),
            t(r).addClass("eae-pb-bar--no-overflow")),
          "skin5" === n &&
            (t(i).addClass("eae-pb-bar-value--aligned-value"),
            $is_rtl
              ? t(i).attr("style", "right :" + a + "%")
              : t(i).attr("style", "left :" + a + "%"),
            t(o).attr("style", "width :" + a + "%")),
          $wrapper.each(function (e, t) {
            let a = window.scrollY;
            const n = new IntersectionObserver(
              (e) => {
                e.forEach((e) => {
                  const t = window.scrollY;
                  if (e.isIntersecting) {
                    let t = e.target.querySelector(".eae-pb-bar-value"),
                      a = e.target.querySelector(".eae-pb-bar-skill"),
                      n = e.target.querySelector(".eae-pb-bar-inner");
                    null == t ||
                      t.classList.contains("js-animated") ||
                      t.classList.add("js-animated"),
                      null == a ||
                        a.classList.contains("js-animated") ||
                        a.classList.add("js-animated"),
                      null == n ||
                        n.classList.contains("js-animated") ||
                        n.classList.add("js-animated");
                  } else
                    e.isIntersecting || e.target.classList.remove("animate");
                  a = t;
                });
              },
              {
                root: null,
                rootMargin: "0px 0px -100px 0px",
                threshold: 0,
              }
            );
            n.observe(t);
          });
      },
      s = function (e, t) {
        var a = e.find(".eae-content-switcher-wrapper"),
          n = (e.data("id"), a.find(".eae-content-switch-button"));
        n.each(function (e, i) {
          t(this).on("click", function (e) {
            e.preventDefault();
            let i = t(this).find(".eae-content-switch-label");
            if (!t(this).hasClass("active")) {
              t(n).removeClass("active");
              let e = t(i).attr("id");
              t(this).addClass("active");
              var r = t(a).find(".eae-cs-content-section");
              t(r).removeClass("active");
              let o = t(a).find(".eae-content-section-" + e);
              t(o).addClass("active"),
                window.dispatchEvent(new Event("resize"));
            }
          });
        });
      },
      l = function (e, t) {
        let a = e.find(".eae-content-switcher-wrapper"),
          n = (e.data("id"), a.find(".eae-cs-switch-label")),
          i = a.find(".eae-content-switch-label.primary-label");
        const r = t(i).attr("item_id");
        let o = a.find(".eae-content-switch-label.secondary-label");
        const s = t(o).attr("item_id");
        let l = a.find(".eae-cs-content-section.eae-content-section-" + r),
          d = a.find(".eae-cs-content-section.eae-content-section-" + s);
        t(n).on("click", function (e) {
          t(this).find("input.eae-content-toggle-switch").is(":checked")
            ? (o.addClass("active"),
              d.addClass("active"),
              i.removeClass("active"),
              l.removeClass("active"))
            : (i.addClass("active"),
              l.addClass("active"),
              o.removeClass("active"),
              d.removeClass("active")),
            window.dispatchEvent(new Event("resize"));
        });
      };
    e.fn.EAEHoverDirection = function (t) {
      var a = e.extend(
        {
          inaccuracy: 30,
          speed: 200,
        },
        t
      );
      this.find(".overlay").css({
        top: -9999999,
      }),
        this.mouseenter(function (t) {
          (container = e(this)),
            (overlay = container.find(".overlay")),
            (parentOffset = container.offset()),
            (relX = t.pageX - parentOffset.left),
            (relY = t.pageY - parentOffset.top),
            overlay.css({
              top: 0,
              left: 0,
              width: container.width(),
              height: container.height(),
            }),
            relX > container.width() - a.inaccuracy
              ? overlay.css({
                  top: 0,
                  left: container.width(),
                })
              : relX < a.inaccuracy
              ? overlay.css({
                  top: 0,
                  left: -container.width(),
                })
              : relY > container.height() - a.inaccuracy
              ? overlay.css({
                  top: container.width(),
                  left: 0,
                })
              : relY < a.inaccuracy &&
                overlay.css({
                  top: -container.width(),
                  left: 0,
                }),
            overlay.animate(
              {
                top: 0,
                left: 0,
              },
              a.speed
            );
        }),
        this.mouseleave(function (t) {
          (container = e(this)),
            (overlay = container.find(".overlay")),
            (parentOffset = container.offset()),
            (relX = t.pageX - parentOffset.left),
            (relY = t.pageY - parentOffset.top),
            relX <= 0 &&
              overlay.animate(
                {
                  top: 0,
                  left: -container.width(),
                },
                a.speed
              ),
            relX >= container.width() &&
              overlay.animate(
                {
                  top: 0,
                  left: container.width(),
                },
                a.speed
              ),
            relY <= 0 &&
              overlay.animate(
                {
                  left: 0,
                  top: -container.height(),
                },
                a.speed
              ),
            relY >= container.height() &&
              overlay.animate(
                {
                  left: 0,
                  top: container.height(),
                },
                a.speed
              );
        });
    };
    let d = function (e, t) {
      const a = e.find(".eae-chart-outer-container"),
        n = ".elementor-element-" + e.data("id"),
        i = document.querySelector(n + " .eae-chart-outer-container"),
        r = e.find("#eae-chart-canvas");
      let o = a.data("settings");
      e.find(".eae-chart-outer-container");
      new IntersectionObserver(
        (e, t) => {
          e.forEach((e) => {
            const a = e.target;
            e.isIntersecting &&
              (a.classList.contains("trigger") ||
                (a.classList.add("trigger"), new Chart(r, o)),
              t.unobserve(a));
          });
        },
        {
          root: null,
          threshold: 0.3,
        }
      ).observe(i);
    };
    const c = function (e, t, a = null, n) {
        let i = {},
          r = [],
          o = ".elementor-element-" + t + " .eae-swiper-container",
          s = elementorFrontend.config.responsive.activeBreakpoints;
        const l = {
            slidesPerView: "slidesPerView",
            slidesPerGroup: "slidesPerGroup",
            spaceBetween: "spaceBetween",
          },
          d = ".elementor-element-" + t;
        if (null !== a) {
          t = a.data("id");
          o =
            d +
            ' .eae-swiper-container[data-eae-slider-id="' +
            a.find(".swiper-container").data("eae-slider-id") +
            '"]';
        }
        if ("yes" === n.data("show-thumbnail")) {
          (i = (function (e, t, a, n) {
            let i = {};
            const r = {};
            if (e.hasOwnProperty("mobile"))
              for (const e in t) a.hasOwnProperty(e) && (i[e] = a[e].mobile);
            return (
              n &&
                Object.keys(n).map((e) => {
                  const t = parseInt(n[e]);
                  "desktop" === e && (e = "default");
                  const i = parseInt(a.spaceBetween[e]),
                    o = parseInt(a.slidesPerView[e]);
                  r[t - 1] = {
                    spaceBetween: i,
                    slidesPerView: o,
                  };
                }),
              (i.breakpoints = r),
              (i.direction = "horizontal"),
              (i.watchSlidesVisibility = !0),
              (i.watchSlidesProgress = !0),
              (i.freeMode = !0),
              (i.slideToClickedSlide = !0),
              i
            );
          })(s, l, n.data("thumb-settings"), e.breakpoints_value)),
            (i.el = jQuery(
              ".elementor-element-" + t + " .eae-thumb-container"
            ));
        }
        if (void 0 === e) return !1;
        if (
          ((r = {
            direction: e.direction,
            speed: e.speed,
            autoHeight: e.autoHeight,
            autoplay: e.autoplay,
            effect: e.effect,
            loop: e.loop,
            zoom: e.zoom,
            wrapperClass: "eae-swiper-wrapper",
            slideClass: "eae-swiper-slide",
            observer: !0,
            observeParents: !0,
          }),
          s.hasOwnProperty("mobile"))
        )
          for (const t in l) e.hasOwnProperty(t) && (r[t] = e[t].mobile);
        e.loop &&
          e.hasOwnProperty("slidersPerView") &&
          document.querySelectorAll(d + " .eae-swiper-slide").length <
            e.slidesPerView.tablet &&
          (r.loop = !1);
        const c = {};
        if (
          (e.hasOwnProperty("breakpoints_value") &&
            Object.keys(e.breakpoints_value).map((t) => {
              const a = parseInt(e.breakpoints_value[t]);
              "desktop" === t && (t = "default");
              const n = parseInt(e.spaceBetween[t]),
                i = parseInt(e.slidesPerView[t]),
                r = parseInt(e.slidesPerGroup[t]);
              c[a - 1] = {
                spaceBetween: n,
                slidesPerView: i,
                slidesPerGroup: r,
              };
            }),
          (r.breakpoints = c),
          (r.keyboard = "yes" === e.keyboard && {
            enabled: !0,
            onlyInViewport: !0,
          }),
          "yes" === e.navigation &&
            (r.navigation = {
              nextEl: d + " .eae-swiper-button-next",
              prevEl: d + " .eae-swiper-button-prev",
            }),
          "" !== e.ptype &&
            (r.pagination = {
              el: d + " .eae-swiper-pagination",
              type: e.ptype,
              clickable: e.clickable,
            }),
          "yes" == e.scrollbar &&
            (r.scrollbar = {
              el: d + " .eae-swiper-scrollbar",
              hide: !0,
            }),
          (r.thumbs = {
            swiper: i,
          }),
          "undefined" == typeof Swiper)
        ) {
          new (0, elementorFrontend.utils.swiper)(jQuery(o), r).then((a) => {
            let n = a;
            p(n);
            const i = e.pause_on_hover;
            "yes" == i && e.autoplay && f(n, i, t);
          });
        } else {
          const a = new Swiper(
            ".elementor-element-" + t + " .eae-swiper-container",
            r
          );
          p(a);
          const n = e.pause_on_hover;
          "yes" == n && f(a, n, t);
        }
        jQuery(".elementor-element-" + t + " .eae-swiper-container").css(
          "visibility",
          "visible"
        );
      },
      p = function (e) {
        e.length > 0
          ? e.forEach(function (t) {
              t.on("slideChangeTransitionStart", function () {
                t.$wrapperEl.find(".ae-featured-bg-yes").each(function () {
                  if ("none" == jQuery(this).css("background-image")) {
                    let e = jQuery(this).attr("data-ae-bg");
                    jQuery(this).css("background-image", "url(" + e + ")");
                  }
                }),
                  t.$wrapperEl.find(".ae-bg-color-yes").each(function () {
                    let e = jQuery(this).attr("data-ae-bg-color");
                    "rgba(0, 0, 0, 0)" ===
                      jQuery(this).css("background-color") &&
                      jQuery(this).css("background-color", e);
                  }),
                  t.$wrapperEl
                    .find(".swiper-slide-duplicate")
                    .find(".elementor-invisible")
                    .each(function () {
                      elementorFrontend.elementsHandler.runReadyTrigger(
                        jQuery(this)
                      );
                    }),
                  t.$wrapperEl
                    .find(".swiper-slide")
                    .find(".animated")
                    .each(function () {
                      elementorFrontend.elementsHandler.runReadyTrigger(
                        jQuery(this)
                      );
                    });
              }),
                t.on("click", function () {
                  const t = e.clickedSlide;
                  if (void 0 === t) return;
                  const a = t.querySelector(".ae-link-yes");
                  if (null !== a && 0 != a.length) {
                    void 0 !== jQuery(a).data("ae-url") &&
                      (jQuery(a).data("ae-url") &&
                      jQuery(a).hasClass("ae-new-window-yes")
                        ? window.open(jQuery(a).data("ae-url"))
                        : (location.href = jQuery(a).data("ae-url")));
                  }
                }),
                t.init();
            })
          : (e.on("slideChangeTransitionStart", function () {
              e.$wrapperEl.find(".ae-featured-bg-yes").each(function () {
                if ("none" == jQuery(this).css("background-image")) {
                  let e = jQuery(this).attr("data-ae-bg");
                  jQuery(this).css("background-image", "url(" + e + ")");
                }
              }),
                e.$wrapperEl.find(".ae-bg-color-yes").each(function () {
                  let e = jQuery(this).attr("data-ae-bg-color");
                  "rgba(0, 0, 0, 0)" === jQuery(this).css("background-color") &&
                    jQuery(this).css("background-color", e);
                }),
                e.$wrapperEl
                  .find(".swiper-slide-duplicate")
                  .find(".elementor-invisible")
                  .each(function () {
                    elementorFrontend.elementsHandler.runReadyTrigger(
                      jQuery(this)
                    );
                  }),
                e.$wrapperEl
                  .find(".swiper-slide")
                  .find(".animated")
                  .each(function () {
                    elementorFrontend.elementsHandler.runReadyTrigger(
                      jQuery(this)
                    );
                  });
            }),
            e.on("click", function () {
              const t = e.clickedSlide;
              if (void 0 === t) return;
              const a = t.querySelector(".ae-link-yes");
              if (null !== a && 0 != a.length) {
                void 0 !== jQuery(a).data("ae-url") &&
                  (jQuery(a).data("ae-url") &&
                  jQuery(a).hasClass("ae-new-window-yes")
                    ? window.open(jQuery(a).data("ae-url"))
                    : (location.href = jQuery(a).data("ae-url")));
              }
            }),
            e.init());
      },
      f = function (e, t, a) {
        jQuery(".elementor-element-" + a + " .eae-swiper-container").hover(
          function () {
            e.autoplay.stop();
          },
          function () {
            e.autoplay.start();
          }
        );
      };
    var u,
      m = elementorModules.frontend.handlers.Base;
    u = m.extend({
      getDefaultSettings: function () {
        return {
          settings: this.getElementSettings(),
        };
      },
      getDefaultElements: function () {
        const e = this.$element.data("id"),
          t = document.querySelector(".elementor-element-" + e),
          a = t.querySelector(".wts-eae-coupon-code-wrapper");
        return {
          eid: e,
          element: t,
          wrapper: a,
        };
      },
      onInit: function () {
        const { settings: t } = this.getDefaultSettings(),
          { wrapper: a } = this.getDefaultElements(),
          { element: n } = this.getDefaultElements();
        var i = n.querySelector(".eae-cc-button"),
          r = n.querySelector(".eae-code");
        if (
          (n.querySelectorAll(".wts-eae-coupon-code-wrapper").forEach((e) => {
            let t = e.querySelector(".eae-lottie");
            if (null != t) {
              let e = JSON.parse(t.getAttribute("data-lottie-settings")),
                a = lottie.loadAnimation({
                  container: t,
                  path: e.url,
                  renderer: "svg",
                  loop: e.loop,
                });
              1 == e.reverse && a.setDirection(-1);
            }
          }),
          null != i &&
            i.addEventListener("click", function () {
              const e = r.getAttribute("data-code-value"),
                a = document.createElement("textarea");
              (a.value = e),
                document.body.appendChild(a),
                a.select(),
                document.execCommand("copy"),
                document.body.removeChild(a);
              const n = i.innerHTML;
              let o;
              "scratch" == t.coupon_type ||
              "peel" == t.coupon_type ||
              "slide" == t.coupon_type
                ? (i.innerText = t.peel_after_copy_button)
                : (i.innerText = t.after_copy_button),
                (o = "standard" == t.coupon_type ? t.sta_speed : t.peel_speed),
                setTimeout(function () {
                  i.innerHTML = n;
                }, o);
            }),
          "peel" == t.coupon_type && "" != t.dynamic_coupon)
        ) {
          var o = new Peel("#fade-out", {
            corner: Peel.Corners.TOP_RIGHT,
          });
          o.setFadeThreshold(0.9),
            o.handleDrag(function (e, t, a) {
              this.setPeelPosition(t, a),
                1 === o.getAmountClipped() && o.removeEvents();
            }),
            o.setPeelPosition(440, 100);
        }
        if ("pop" == t.sta_layout && "" != t.dynamic_coupon) {
          const C = a.querySelector(".eae-coupon-popup-link"),
            x = n.getAttribute("data-id");
          "svg" == t.pop_icon.library
            ? (($close_btn_html = ""),
              ($close_btn_html =
                '<svg class="eae-close" style="-webkit-mask-image: url(' +
                t.pop_icon.value.url +
                "); mask-image: url(" +
                t.pop_icon.value.url +
                '); "></svg>'))
            : ($close_btn_html =
                '<i class="eae-close ' + t.pop_icon.value + '"> </i>'),
            e(C).eaePopup({
              type: "inline",
              midClick: !0,
              mainClass: "eae-coupon-popup eae-popup  eae-cc-" + x,
              closeMarkup: $close_btn_html,
              closeBtnInside: "yes" == t.btn_in_out,
              callbacks: {
                beforeOpen: function () {
                  "" != t.effect &&
                    (this.st.mainClass =
                      " eae-coupon-popup eae-popup  eae-cc-" +
                      x +
                      " mfp-" +
                      t.effect);
                },
                open: function () {
                  var e = C.getAttribute("data-id");
                  const a = document.querySelector(".eae-coupon-popup-" + e);
                  var n = a.querySelector(".eae-cc-button"),
                    i = a.querySelector(".eae-code");
                  const r = n.innerText;
                  n.addEventListener("click", function () {
                    const e = i.getAttribute("data-code-value"),
                      o = document.createElement("textarea");
                    (o.value = e),
                      a.appendChild(o),
                      o.select(),
                      document.execCommand("copy"),
                      a.removeChild(o),
                      (n.innerText = t.after_copy_button),
                      setTimeout(function () {
                        n.innerText = r;
                      }, t.sta_speed);
                  });
                },
              },
            }),
            "yes" == t.preview_modal &&
              elementorFrontend.isEditMode() &&
              C.click();
        }
        if ("slide" == t.coupon_type && "" != t.dynamic_coupon) {
          var s = a.querySelector(".eae-slide-fr");
          if ("yes" == t.preview_modal && elementorFrontend.isEditMode())
            s.style.display = "none";
          else {
            var l = 0,
              d = 0,
              c = 0;

            function p(e) {
              (c = e.clientX - l),
                e.clientY - d,
                c > 2 || c < t.Peel_scratch_width || (s.style.left = c + "px");
            }
            s.addEventListener(
              "mousedown",
              function (e) {
                e.preventDefault(),
                  (l = e.clientX - s.offsetLeft),
                  (d = e.clientY - s.offsetTop),
                  window.addEventListener("mousemove", p, !1);
              },
              !1
            ),
              window.addEventListener(
                "mouseup",
                function () {
                  window.removeEventListener("mousemove", p, !1);
                },
                !1
              );
            const S = s;
            let T;
            S.addEventListener("touchstart", (e) => {
              const t = e.touches[0];
              (T = t.clientX - S.getBoundingClientRect().left),
                (S.style.cursor = "grabbing");
            }),
              S.addEventListener("touchmove", (e) => {
                if (void 0 === T) return;
                const a = e.touches[0].clientX - T;
                a > 4 || a < t.Peel_scratch_width || (S.style.left = a + "px");
              }),
              S.addEventListener("touchend", () => {
                (T = void 0), (S.style.cursor = "grab");
              });
          }
        }
        if ("scratch" === t.coupon_type && "" != t.dynamic_coupon)
          if ("yes" == t.preview_modal && elementorFrontend.isEditMode())
            a.querySelector("#eae-scratch-canvas").style.display = "none";
          else {
            var f, u;
            canvas = a.querySelector("#eae-scratch-canvas");
            var m = canvas.width,
              g = canvas.height,
              h = canvas.getContext("2d"),
              v = new Image(),
              w = new Image();
            if (
              (null == t.item_bg_image &&
                null == t.item_bg_color &&
                null == t.item_bg_color_b &&
                ((v.src = eae.plugin_url + "assets/img/coupon/scratch_img.png"),
                (v.onload = function () {
                  h.drawImage(v, 0, 0, m, g);
                })),
              null != t.item_bg_image)
            )
              (v.src = t.item_bg_image.url),
                (v.onload = function () {
                  h.drawImage(v, 0, 0, m, g);
                });
            else if (
              null == t.item_bg_color_b &&
              "classic" == t.item_bg_background &&
              null == t.item_bg_image
            ) {
              if (null != t.item_bg_color) {
                let E = h.createLinearGradient(0, 0, 135, 135);
                E.addColorStop(0, t.item_bg_color),
                  (h.fillStyle = E),
                  h.fillRect(0, 0, m, g);
              }
            } else if (
              null != t.item_bg_color_b &&
              null != t.item_bg_color &&
              "gradient" == t.item_bg_background &&
              null == t.item_bg_image
            ) {
              let L = h.createLinearGradient(
                0,
                0,
                t.item_bg_color_stop.size,
                t.item_bg_color_b_stop.size
              );
              L.addColorStop(0, t.item_bg_color),
                L.addColorStop(1, t.item_bg_color_b),
                (h.fillStyle = L),
                h.fillRect(0, 0, m, g);
            }

            function y(e, t) {
              var a = 0,
                n = 0;
              if (void 0 !== t.offsetParent)
                do {
                  (a += t.offsetLeft), (n += t.offsetTop);
                } while ((t = t.offsetParent));
              return {
                x: (e.pageX || e.touches[0].clientX) - a,
                y: (e.pageY || e.touches[0].clientY) - n,
              };
            }

            function b(e) {
              (f = !0), (u = y(e, canvas));
            }

            function _(e) {
              if (f) {
                e.preventDefault();
                for (
                  var t,
                    n,
                    i,
                    r,
                    o,
                    s = y(e, canvas),
                    l =
                      ((i = u),
                      (r = s),
                      Math.sqrt(
                        Math.pow(r.x - i.x, 2) + Math.pow(r.y - i.y, 2)
                      )),
                    d = (function (e, t) {
                      return Math.atan2(t.x - e.x, t.y - e.y);
                    })(u, s),
                    c = 0;
                  c < l;
                  c++
                )
                  (t = u.x + Math.sin(d) * c - 25),
                    (n = u.y + Math.cos(d) * c - 25),
                    (h.globalCompositeOperation = "destination-out"),
                    h.drawImage(w, t, n);
                (u = s),
                  (o = (function (e) {
                    (!e || e < 1) && (e = 1);
                    for (
                      var t = h.getImageData(0, 0, m, g).data,
                        a = t.length,
                        n = a / e,
                        i = 0,
                        r = (i = 0);
                      r < a;
                      r += e
                    )
                      0 === parseInt(t[r]) && i++;
                    return Math.round((i / n) * 100);
                  })(32)),
                  (o = o || 0) > 40 &&
                    ((a.querySelector(".eae-back-wrapper").style.zIndex = "1"),
                    a.querySelector(".eae-coupon-canvas").remove());
              }
            }

            function k(e) {
              f = !1;
            }
            (w.src = eae.plugin_url + "assets/img/coupon/brush.png"),
              canvas.addEventListener("mousedown", b, !1),
              canvas.addEventListener("touchstart", b, !1),
              canvas.addEventListener("mousemove", _, !1),
              canvas.addEventListener("touchmove", _, !1),
              canvas.addEventListener("mouseup", k, !1),
              canvas.addEventListener("touchend", k, !1);
          }
      },
      onElementChange: function (e) {
        const { wrapper: t } = this.getDefaultElements(),
          { settings: a } = this.getDefaultSettings();
        if (
          (("" != a.dynamic_coupon && "dynamic" == a.source) ||
            "static" == a.source) &&
          "scratch" === a.coupon_type
        )
          var n = t.querySelector("#eae-scratch-canvas");
        if (
          "item_bg_background" == e ||
          "item_bg_color" == e ||
          "item_bg_color_b" == e ||
          "item_bg_color_stop" == e ||
          "item_bg_color_b_stop" == e
        ) {
          var i = n.width,
            r = n.height,
            o = n.getContext("2d");
          if (
            (null == a.item_bg_color_b &&
              "classic" == a.item_bg_background &&
              ((o.fillStyle = a.item_bg_color), o.fillRect(0, 0, i, r)),
            null != a.item_bg_color_b && "gradient" == a.item_bg_background)
          ) {
            let e = o.createLinearGradient(
              0,
              0,
              a.item_bg_color_stop.size,
              a.item_bg_color_b_stop.size
            );
            e.addColorStop(0, a.item_bg_color),
              e.addColorStop(1, a.item_bg_color_b),
              (o.fillStyle = e),
              o.fillRect(0, 0, i, r);
          }
        }
      },
    });
    var g;
    m = elementorModules.frontend.handlers.Base;
    (g = m.extend({
      getDefaultSettings: function () {
        return {
          settings: this.getElementSettings(),
        };
      },
      getDefaultElements: function () {
        const e = this.$element.data("id"),
          t = document.querySelector(".elementor-element-" + e),
          a = t.querySelector(".eae-dropbar-wrapper");
        return {
          eid: e,
          element: t,
          wrapper: a,
        };
      },
      onInit: function () {
        const { settings: e } = this.getDefaultSettings(),
          { wrapper: t } = this.getDefaultElements(),
          { element: a } = this.getDefaultElements(),
          n = t.querySelector(".eae-drop-content");
        if ("hover" === e.content_mode) {
          let a;
          t.addEventListener("mouseenter", () => {
            clearTimeout(a),
              t.classList.add("eae-animation"),
              (a = setTimeout(() => {
                t.classList.add("eae-active");
              }, e.show_delay.size));
          }),
            t.addEventListener("mouseleave", () => {
              e.caption_animation_out || t.classList.remove("eae-animation"),
                e.hide_delay.size
                  ? (a = setTimeout(() => {
                      t.classList.remove("eae-active");
                    }, e.hide_delay.size))
                  : t.classList.remove("eae-active");
            });
        }
        "click" === e.content_mode &&
          t.addEventListener("click", () => {
            t.classList.toggle("eae-active"),
              t.classList.contains("eae-active")
                ? t.classList.add("eae-animation")
                : e.caption_animation_out ||
                  t.classList.remove("eae-animation");
          }),
          (function (t, a, n) {
            const i = t.parentElement.getBoundingClientRect(),
              r = t.getBoundingClientRect(),
              o = t.parentElement,
              s = window.innerWidth,
              l = {
                "bottom-left": () => ({
                  top: e.off_set.size
                    ? `${o.offsetHeight + e.off_set.size}`
                    : "unset",
                  left: 0,
                }),
                "bottom-center": () => ({
                  top: e.off_set.size
                    ? `${o.offsetHeight + e.off_set.size}`
                    : "unset",
                  left: (i.width - r.width) / 2,
                }),
                "bottom-right": () => ({
                  top: e.off_set.size
                    ? `${o.offsetHeight + e.off_set.size}`
                    : "unset",
                  left: i.width - r.width,
                }),
                "top-left": () => ({
                  top: -(r.height + e.off_set.size),
                  left: 0,
                }),
                "top-center": () => ({
                  top: -(r.height + e.off_set.size),
                  left: (i.width - r.width) / 2,
                }),
                "top-right": () => ({
                  top: -(r.height + e.off_set.size),
                  left: i.width - r.width,
                }),
                "left-top": () => ({
                  top: 0,
                  left: -(r.width + e.off_set.size),
                }),
                "left-center": () => ({
                  top: (i.height - r.height) / 2,
                  left: -(r.width + e.off_set.size),
                }),
                "left-bottom": () => ({
                  top: i.height - r.height,
                  left: -(r.width + e.off_set.size),
                }),
                "right-top": () => ({
                  top: 0,
                  left: i.width + e.off_set.size,
                }),
                "right-center": () => ({
                  top: (i.height - r.height) / 2,
                  left: i.width + e.off_set.size,
                }),
                "right-bottom": () => ({
                  top: i.height - r.height,
                  left: i.width + e.off_set.size,
                }),
              };
            if (!l[a]) return void console.error("Invalid position provided");
            let { top: d, left: c } = l[a]();
            (d = "string" == typeof d ? parseFloat(d) : d),
              (c = "string" == typeof c ? parseFloat(c) : c);
            const p = r.width,
              f = i.left + c,
              u = f + p;
            f < 0 ? (c = -i.left) : u > s && (c -= u - s),
              (t.style.top = `${d}px`),
              (t.style.left = `${c}px`);
            const m = {
              "slide-left": () => {
                t.style.clipPath = "inset(0 100% 0 0)";
              },
              "slide-top": () => {
                t.style.clipPath = "inset(0 0 100% 0)";
              },
              "slide-bottom": () => {
                t.style.clipPath = "inset(100% 0 0 0)";
              },
              "slide-right": () => {
                t.style.clipPath = "inset(0 0 0 100%)";
              },
              "animation-fade": () => {
                t.style.opacity = "0";
              },
            };
            if (m[n]) {
              if ((m[n](), o)) {
                const a = (e) => {
                  const a = {
                    "slide-left": () =>
                      (t.style.clipPath = e
                        ? "inset(0 0 0 0)"
                        : "inset(0 100% 0 0)"),
                    "slide-top": () =>
                      (t.style.clipPath = e
                        ? "inset(0 0 0 0)"
                        : "inset(0 0 100% 0)"),
                    "slide-bottom": () =>
                      (t.style.clipPath = e
                        ? "inset(0 0 0 0)"
                        : "inset(100% 0 0 0)"),
                    "slide-right": () =>
                      (t.style.clipPath = e
                        ? "inset(0 0 0 0)"
                        : "inset(0 0 0 100%)"),
                    "animation-fade": () => (t.style.opacity = e ? "1" : "0"),
                  };
                  a[n] && a[n]();
                };
                let i,
                  r = !1;
                "hover" === e.content_mode
                  ? (o.addEventListener("mouseenter", () => {
                      clearTimeout(i),
                        (animationTimeout = setTimeout(() => {
                          a(!0);
                        }, e.show_delay.size));
                    }),
                    o.addEventListener("mouseleave", () => {
                      i = setTimeout(() => {
                        a(!1);
                      }, e.hide_delay.size);
                    }))
                  : o.addEventListener("click", () => {
                      (r = !r), a(r);
                    });
              }
            } else console.error("Invalid animation type provided");
          })(n, e.content_position, e.content_animation);
        var i = t.querySelector(".eae-lottie-animation");
        if (null != i) {
          let e = JSON.parse(i.getAttribute("data-lottie-settings")),
            t = lottie.loadAnimation({
              container: i,
              path: e.url,
              renderer: "svg",
              loop: e.loop,
            });
          1 == e.reverse && t.setDirection(-1);
        }
      },
    })),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/wts-ab-image.default",
        function (e, t) {
          e.find(".eae-img-comp-container")
            .imagesLoaded()
            .done(function () {
              (ab_style = e.find(".eae-img-comp-container").data("ab-style")),
                (slider_pos = e
                  .find(".eae-img-comp-container")
                  .data("slider-pos")),
                "horizontal" === ab_style
                  ? ((separator_width = parseInt(
                      e.find(".eae-img-comp-overlay").css("border-right-width")
                    )),
                    (function (e) {
                      var t, a;

                      function n(t) {
                        var n,
                          i,
                          r,
                          o = 0;

                        function s(e) {
                          e.preventDefault(),
                            (o = 1),
                            window.addEventListener("mousemove", d),
                            n.addEventListener("touchmove", c);
                        }

                        function l() {
                          o = 0;
                        }

                        function d(e) {
                          var t;
                          if (0 == o) return !1;
                          (t = f(e)) < 0 && (t = 0), t > i && (t = i), u(t);
                        }

                        function c(e) {
                          var t;
                          if (0 == o) return !1;
                          (t = p(e)) < 0 && (t = 0), t > i && (t = i), u(t);
                        }

                        function p(e) {
                          var a;
                          return (
                            (a = t.getBoundingClientRect()),
                            e.changedTouches[0].clientX - a.left
                          );
                        }

                        function f(e) {
                          var a;
                          return (
                            (e = e || window.event),
                            (a = t.getBoundingClientRect()),
                            e.pageX - a.left
                          );
                        }

                        function u(e) {
                          (t.style.width = e + "px"),
                            (n.style.left =
                              t.offsetWidth -
                              n.offsetWidth / 2 -
                              separator_width / 2 +
                              "px");
                        }
                        (i = t.offsetWidth),
                          (r = t.offsetHeight),
                          (t.style.width = a + "px"),
                          ((n = (n = e.find(
                            ".eae-img-comp-slider"
                          ))[0]).style.top = r / 2 - n.offsetHeight / 2 + "px"),
                          (n.style.left =
                            a - n.offsetWidth / 2 - separator_width / 2 + "px"),
                          e.hasClass("elementor-element-edit-mode") ||
                            (n.addEventListener("mousedown", s),
                            window.addEventListener("mouseup", l),
                            n.addEventListener("touchstart", s),
                            window.addEventListener("touchstop", l));
                      }
                      (t = e.find(".eae-img-comp-overlay")),
                        (a = ((a = t.width()) * slider_pos) / 100),
                        n(t[0]);
                    })(e))
                  : ((separator_width = parseInt(
                      e.find(".eae-img-comp-overlay").css("border-bottom-width")
                    )),
                    (function (e) {
                      var t;

                      function a(t) {
                        var a,
                          n,
                          i,
                          r = 0;

                        function o(e) {
                          e.preventDefault(),
                            (r = 1),
                            window.addEventListener("mousemove", l),
                            a.addEventListener("touchmove", c);
                        }

                        function s() {
                          r = 0;
                        }

                        function l(e) {
                          var t;
                          if (0 == r) return !1;
                          (t = d(e)) < 0 && (t = 0), t > i && (t = i), f(t);
                        }

                        function d(e) {
                          var a,
                            n = 0;
                          return (
                            (e = e || window.event),
                            (a = t.getBoundingClientRect()),
                            (n = e.pageY - a.top),
                            (n -= window.pageYOffset)
                          );
                        }

                        function c(e) {
                          var t;
                          if (0 == r) return !1;
                          (t = p(e)) < 0 && (t = 0), t > i && (t = i), f(t);
                        }

                        function p(e) {
                          var a;
                          return (
                            (a = t.getBoundingClientRect()),
                            e.changedTouches[0].clientY - a.top
                          );
                        }

                        function f(e) {
                          (t.style.height = e + "px"),
                            (a.style.top =
                              t.offsetHeight -
                              a.offsetHeight / 2 -
                              separator_width / 2 +
                              "px");
                        }
                        (n = t.offsetWidth),
                          (i = t.offsetHeight),
                          (t.style.height = start_pos + "px"),
                          ((a = (a = e.find(
                            ".eae-img-comp-slider"
                          ))[0]).style.top =
                            start_pos -
                            a.offsetHeight / 2 -
                            separator_width / 2 +
                            "px"),
                          (a.style.left = n / 2 - a.offsetWidth / 2 + "px"),
                          e.hasClass("elementor-element-edit-mode") ||
                            (a.addEventListener("mousedown", o),
                            window.addEventListener("mouseup", s),
                            a.addEventListener("touchstart", o),
                            window.addEventListener("touchstop", s));
                      }
                      (t = e.find(".eae-img-comp-overlay")),
                        (start_pos = t.height()),
                        (start_pos = (start_pos * slider_pos) / 100),
                        a(t[0]);
                    })(e));
            });
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/global",
        function (e, t) {
          e.hasClass("eae-particle-yes") &&
            ((id = e.data("id")),
            (element_type = e.data("element_type")),
            (pdata = e.data("eae-particle")),
            (pdata_wrapper = e.find(".eae-particle-wrapper").data("eae-pdata")),
            "undefined" != typeof pdata && "" != pdata
              ? e.find(".eae-section-bs").length > 0
                ? (e
                    .find(".eae-section-bs")
                    .after(
                      '<div class="eae-particle-wrapper" id="eae-particle-' +
                        id +
                        '"></div>'
                    ),
                  particlesJS("eae-particle-" + id, pdata))
                : ("column" == element_type
                    ? e.prepend(
                        '<div class="eae-particle-wrapper" id="eae-particle-' +
                          id +
                          '"></div>'
                      )
                    : e.prepend(
                        '<div class="eae-particle-wrapper " id="eae-particle-' +
                          id +
                          '"></div>'
                      ),
                  particlesJS("eae-particle-" + id, pdata))
              : "undefined" != typeof pdata_wrapper &&
                "" != pdata_wrapper &&
                (element_type,
                e.prepend(
                  '<div class="eae-particle-wrapper eae-particle-area" id="eae-particle-' +
                    id +
                    '"></div>'
                ),
                particlesJS("eae-particle-" + id, JSON.parse(pdata_wrapper))));
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/global",
        function (e, t) {
          if (e.hasClass("eae-animated-gradient-yes"))
            if (
              ((id = e.data("id")),
              (color = e.data("color")),
              (angle = e.data("angle")),
              e.hasClass("elementor-element-edit-mode"))
            )
              (color = e.find(".animated-gradient").data("color")),
                (angle = e.find(".animated-gradient").data("angle")),
                (gradient_color_editor =
                  "linear-gradient(" + angle + "," + color + ")"),
                e.prepend(
                  '<div class="animated-gradient" style="background-image : ' +
                    gradient_color_editor +
                    ' "></div>'
                );
            else {
              var a = "linear-gradient(" + angle + "," + color + ")";
              e.css("background-image", a);
            }
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/wts-modal-popup.default",
        function (e, a) {
          new Event("eaePopupLoaded");
          const n = e.find(".eae-popup-wrapper"),
            i = n.data("preview-modal"),
            r = n.data("effect"),
            o = n.data("close-button-type"),
            s = n.data("close-btn"),
            l =
              "icon" === o
                ? `<i class="eae-close ${s}"> </i>`
                : `<svg class="eae-close" style="-webkit-mask: url(${s}); mask: url(${s});"></svg>`,
            d = e.find(".eae-popup-container");
          let c = d.attr("id");
          popupInstance[c] ||
            ((popupInstance[c] = d.find(".eae-popup-content").clone(!0)),
            d.find(".eae-popup-content").empty());
          const p = e.find(".eae-popup-wrapper .eae-popup-link");
          p.on("click", function () {
            c = a(this).data("id");
            a(".eae-popup-container.eae-popup-" + c).each(function () {
              a(this)
                .find(".eae-popup-content")
                .replaceWith(popupInstance[c].clone(!0));
            });
          }),
            e.find(".eae-popup-link").eaePopup({
              type: "inline",
              disableOn: 0,
              key: null,
              midClick: !1,
              preloader: !0,
              focus: "",
              closeOnContentClick: !1,
              closeOnBgClick: !0,
              closeBtnInside: n.data("close-in-out"),
              showCloseBtn: !0,
              enableEscapeKey: !0,
              modal: !1,
              alignTop: !1,
              removalDelay: 200,
              prependTo: null,
              fixedContentPos: !0,
              fixedBgPos: "auto",
              overflowY: "auto",
              closeMarkup: l,
              tClose: "Close (Esc)",
              tLoading: "Loading...",
              autoFocusLast: !0,
              mainClass: `eae-popup eae-popup-${p.data("id")} eae-wrap-${p.data(
                "ctrl-id"
              )}`,
              callbacks: {
                beforeOpen: function () {
                  r &&
                    (this.st.mainClass = `eae-popup eae-popup-${p.data(
                      "id"
                    )} eae-wrap-${p.data("ctrl-id")} mfp-${r}`);
                },
                open: function () {
                  const e = p.data("id"),
                    n = a(
                      `.eae-popup-${e}.eae-popup-container .eae-modal-content`
                    );
                  t(n);
                  const i = n.find(".wpcf7-form");
                  i.length > 0 &&
                    i.each(function (e, t) {
                      wpcf7.init(t);
                    }),
                    n.trigger("after.load.forminator");
                },
                afterClose: function () {
                  e.find(".eae-popup-container")
                    .find(".eae-popup-content")
                    .empty();
                },
              },
            }),
            "yes" === i &&
              e.hasClass("elementor-element-edit-mode") &&
              p.click();
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/wts-testimonial-slider.default",
        function (e, t) {
          if (e.find(".eae-grid-wrapper").hasClass("eae-masonry-yes")) {
            var a = e.find(".eae-grid").masonry({});
            a.imagesLoaded().progress(function () {
              a.masonry("layout");
            });
          }
          if (e.find(".eae-layout-carousel").length) {
            (outer_wrapper = e.find(".eae-swiper-outer-wrapper")),
              (wid = e.data("id")),
              (wclass = ".elementor-element-" + wid);
            var n = outer_wrapper.data("direction"),
              i = outer_wrapper.data("speed"),
              r = outer_wrapper.data("autoplay"),
              o = outer_wrapper.data("duration"),
              s = outer_wrapper.data("effect"),
              l = outer_wrapper.data("space"),
              d = outer_wrapper.data("loop");
            d = "yes" == d;
            var c = outer_wrapper.data("slides-per-view"),
              p = outer_wrapper.data("slides-per-group"),
              f = outer_wrapper.data("ptype"),
              u = outer_wrapper.data("navigation"),
              m = outer_wrapper.data("clickable"),
              g = outer_wrapper.data("keyboard"),
              h = outer_wrapper.data("scrollbar");
            (adata = {
              direction: n,
              effect: s,
              spaceBetween: l.desktop,
              loop: d,
              speed: i,
              slidesPerView: c.desktop,
              slidesPerGroup: p.desktop,
              observer: !0,
              mousewheel: {
                invert: !0,
              },
              breakpoints: {
                1024: {
                  spaceBetween: l.tablet,
                  slidesPerView: c.tablet,
                  slidesPerGroup: p.tablet,
                },
                767: {
                  spaceBetween: l.mobile,
                  slidesPerView: c.mobile,
                  slidesPerGroup: p.mobile,
                },
              },
            }),
              "fade" == s &&
                (adata.fadeEffect = {
                  crossFade: !1,
                }),
              (adata.autoplay = "yes" == r && {
                delay: o,
                disableOnInteraction: !1,
              }),
              "yes" == u &&
                (adata.navigation = {
                  nextEl: ".swiper-button-next",
                  prevEl: ".swiper-button-prev",
                }),
              "" != f &&
                (adata.pagination = {
                  el: ".swiper-pagination",
                  type: f,
                }),
              "bullets" == f &&
                "yes" == m &&
                (adata.pagination = {
                  el: ".swiper-pagination",
                  clickable: !0,
                  type: f,
                }),
              "yes" == h &&
                (adata.scrollbar = {
                  el: ".swiper-scrollbar",
                  draggable: !0,
                }),
              "yes" == g &&
                (adata.keyboard = {
                  enabled: !0,
                  onlyInViewport: !0,
                }),
              0 == d &&
                (adata.autoplay = {
                  delay: o,
                  stopOnLastSlide: !0,
                  disableOnInteraction: !1,
                }),
              (window.mswiper = new Swiper(
                ".elementor-element-" +
                  wid +
                  " .eae-swiper-outer-wrapper .swiper-container",
                adata
              )),
              t(
                ".elementor-element-" +
                  wid +
                  " .eae-swiper-outer-wrapper .swiper-container"
              ).css("visibility", "visible");
          }
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-info-circle.skin1",
        a
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-info-circle.skin2",
        a
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-info-circle.skin3",
        a
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-info-circle.skin4",
        a
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-timeline.skin1",
        n
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-timeline.skin2",
        n
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-timeline.skin3",
        n
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-timeline.skin4",
        n
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-evergreen-timer.skin1",
        function (e, t) {
          var a = e.find(".eae-evergreen-wrapper").data("egtime"),
            n = e.find(".eae-evergreen-wrapper").data("egt-expire"),
            o = e.find(".eae-evergreen-wrapper").data("element-type"),
            s = "eae-" + e.find(".eae-evergreen-wrapper").data("id"),
            l = "eae-temp-" + e.find(".eae-evergreen-wrapper").data("id"),
            d = e.find(".eae-evergreen-wrapper").data("actions"),
            c = e.find(".eae-evergreen-wrapper").data("unqid"),
            p = new Date().getTime();
          if (!e.hasClass("elementor-element-edit-mode"))
            if ("countdown" === o) {
              (m = new Date(a)), (a = m.getTime());
              var f = "expires=" + m.toUTCString();
              document.cookie = l + "=" + m.getTime() + ";" + f + ";path=/";
            } else {
              var u = r(s),
                m = "";
              if ("" !== u) {
                (m = new Date(parseInt(u))).setSeconds(
                  m.getSeconds() +
                    e.find(".eae-evergreen-wrapper").data("egtime")
                ),
                  (a = m.getTime());
                var g = new Date(parseInt(u));
                g.setTime(g.getTime() + 60 * n * 60 * 1e3);
                var h = "expires=" + g.toUTCString();
                document.cookie = s + "=" + u + ";" + h + ";path=/";
                var v = new Date(parseInt(u));
                v.setTime(
                  v.getTime() +
                    1e3 * e.find(".eae-evergreen-wrapper").data("egtime")
                );
                f = "expires=" + v.toUTCString();
                a - p > 0 &&
                  (document.cookie = l + "=" + u + ";" + f + ";path=/");
              } else {
                (temp_date = a),
                  (m = new Date()).setSeconds(
                    m.getSeconds() +
                      e.find(".eae-evergreen-wrapper").data("egtime")
                  ),
                  (a = m.getTime()),
                  i(s, new Date().getTime(), n);
                var w = new Date();
                w.setTime(w.getTime() + 1e3 * temp_date);
                var y = "expires=" + w.toUTCString();
                document.cookie =
                  l + "=" + new Date().getTime() + ";" + y + ";path=/";
              }
            }
          if (!e.hasClass("elementor-element-edit-mode") && a - p < 0)
            return (
              d.length > 0 &&
                d.forEach(function (a) {
                  "redirect" === a &&
                    (($url = e
                      .find(".eae-evergreen-wrapper")
                      .data("redirected-url")),
                    "" !== t.trim($url) && (window.location.href = $url1)),
                    "hide" === a &&
                      (e.hasClass("elementor-element-edit-mode") ||
                        (e.find("#eaeclockdiv").css("display", "none"),
                        e.find(".egt-title").css("display", "none"))),
                    "message" === a &&
                      e.find(".eae-egt-message").css("display", "block"),
                    "hide_parent" === a &&
                      (e.hasClass("elementor-element-edit-mode") ||
                        (($p_secs = e.closest("section")),
                        $p_secs.css("display", "none")));
                }),
              (days = "00"),
              (hours = "00"),
              (minutes = "00"),
              (seconds = "00"),
              e
                .find("." + c)
                .find("#eaedivDays")
                .html(days),
              e
                .find("." + c)
                .find("#eaedivHours")
                .html(hours.slice(-2)),
              e
                .find("." + c)
                .find("#eaedivMinutes")
                .html(minutes.slice(-2)),
              void e
                .find("." + c)
                .find("#eaedivSeconds")
                .html(seconds.slice(-2))
            );
          e.hasClass("elementor-element-edit-mode") &&
            ("countdown" === o
              ? ((m = new Date(a)), (a = m.getTime()))
              : ((m = new Date()).setSeconds(
                  m.getSeconds() +
                    e.find(".eae-evergreen-wrapper").data("egtime")
                ),
                (a = m.getTime())));
          var b = setInterval(function () {
            var n = new Date().getTime(),
              i = a - n,
              r = 0,
              o = 0,
              s = 0,
              l = 0;
            i > 0
              ? ((r = Math.floor(i / 864e5)),
                (o = "0" + Math.floor((i % 864e5) / 36e5)),
                (s = "0" + Math.floor((i % 36e5) / 6e4)),
                (l = "0" + Math.floor((i % 6e4) / 1e3)))
              : (d.length > 0 &&
                  (e.hasClass("elementor-element-edit-mode") ||
                    d.forEach(function (a) {
                      "redirect" === a &&
                        (($url1 = e
                          .find(".eae-evergreen-wrapper")
                          .data("redirected-url")),
                        "" !== t.trim($url1) && (window.location.href = $url1)),
                        "hide" === a &&
                          (e.find("#eaeclockdiv").css("display", "none"),
                          e.find(".egt-title").css("display", "none")),
                        "message" === a &&
                          e.find(".eae-egt-message").css("display", "block"),
                        "hide_parent" === a &&
                          (e.hasClass("elementor-element-edit-mode") ||
                            (($p_secs = e.closest("section")),
                            $p_secs.css("display", "none")));
                    })),
                clearInterval(b),
                (r = "0"),
                (o = "00"),
                (s = "00"),
                (l = "00")),
              r < 10 && (r = "0" + r),
              e
                .find("." + c)
                .find("#eaedivDays")
                .html(r),
              e
                .find("." + c)
                .find("#eaedivHours")
                .html(o.slice(-2)),
              e
                .find("." + c)
                .find("#eaedivMinutes")
                .html(s.slice(-2)),
              e
                .find("." + c)
                .find("#eaedivSeconds")
                .html(l.slice(-2));
          }, 1e3);
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-evergreen-timer.skin2",
        function (e, t) {
          var a = e.find(".eae-evergreen-wrapper").data("egtime"),
            n = e.find(".eae-evergreen-wrapper").data("egt-expire"),
            o = e.find(".eae-evergreen-wrapper").data("element-type"),
            s = "eae-" + e.find(".eae-evergreen-wrapper").data("id"),
            l = "eae-temp-" + e.find(".eae-evergreen-wrapper").data("id"),
            d = e.find(".eae-evergreen-wrapper").data("actions"),
            c = e.find(".eae-evergreen-wrapper").data("unqid"),
            p = new Date().getTime();
          if (!e.hasClass("elementor-element-edit-mode"))
            if ("countdown" === o) {
              (m = new Date(a)), (a = m.getTime());
              var f = "expires=" + m.toUTCString();
              document.cookie = l + "=" + m.getTime() + ";" + f + ";path=/";
            } else {
              var u = r(s),
                m = "";
              if ("" !== u) {
                (m = new Date(parseInt(u))).setSeconds(
                  m.getSeconds() +
                    e.find(".eae-evergreen-wrapper").data("egtime")
                ),
                  (a = m.getTime());
                var g = new Date(parseInt(u));
                g.setTime(g.getTime() + 60 * n * 60 * 1e3);
                var h = "expires=" + g.toUTCString();
                document.cookie = s + "=" + u + ";" + h + ";path=/";
                var v = new Date(parseInt(u));
                v.setTime(
                  v.getTime() +
                    1e3 * e.find(".eae-evergreen-wrapper").data("egtime")
                );
                f = "expires=" + v.toUTCString();
                a - p > 0 &&
                  (document.cookie = l + "=" + u + ";" + f + ";path=/");
              } else {
                (temp_date = a),
                  (m = new Date()).setSeconds(
                    m.getSeconds() +
                      e.find(".eae-evergreen-wrapper").data("egtime")
                  ),
                  (a = m.getTime()),
                  i(s, new Date().getTime(), n);
                var w = new Date();
                w.setTime(w.getTime() + 1e3 * temp_date);
                var y = "expires=" + w.toUTCString();
                document.cookie =
                  l + "=" + new Date().getTime() + ";" + y + ";path=/";
              }
            }
          if (!e.hasClass("elementor-element-edit-mode") && a - p < 0)
            return void (
              d.length > 0 &&
              d.forEach(function (a) {
                "redirect" === a &&
                  (($url = e
                    .find(".eae-evergreen-wrapper")
                    .data("redirected-url")),
                  "" !== t.trim($url) && (window.location.href = $url)),
                  "hide" === a &&
                    (e
                      .find("." + c)
                      .find(".timer-container")
                      .css("display", "none"),
                    e
                      .find("." + c)
                      .find(".egt-title")
                      .css("display", "none")),
                  "message" === a &&
                    e
                      .find("." + c)
                      .find(".eae-egt-message")
                      .css("display", "block"),
                  "hide_parent" === a &&
                    (e.hasClass("elementor-element-edit-mode") ||
                      (($p_secs = e.closest("section")),
                      $p_secs.css("display", "none")));
              })
            );
          e.hasClass("elementor-element-edit-mode") &&
            ("countdown" === o
              ? ((m = new Date(a)), (a = m.getTime()))
              : ((m = new Date()).setSeconds(
                  m.getSeconds() +
                    e.find(".eae-evergreen-wrapper").data("egtime")
                ),
                (a = m.getTime())));
          var b = setInterval(function () {
            var n = new Date().getTime(),
              i = a - n,
              r = Math.floor(i / 864e5),
              o = Math.floor((i % 864e5) / 36e5),
              s = Math.floor((i % 36e5) / 6e4),
              l = Math.floor((i % 6e4) / 1e3);
            if (
              (e
                .find("." + c)
                .find("#eaeulSec1")
                .find(".flip-clock-active")
                .removeClass("flip-clock-active"),
              e
                .find("." + c)
                .find("#eaeulSec1")
                .find(".flip-clock-before")
                .removeClass("flip-clock-before"),
              e
                .find("." + c)
                .find("#eaeulSec")
                .find(".flip-clock-active")
                .removeClass("flip-clock-active"),
              e
                .find("." + c)
                .find("#eaeulSec")
                .find(".flip-clock-before")
                .removeClass("flip-clock-before"),
              i < 0)
            )
              return (
                clearInterval(b),
                void (
                  d.length > 0 &&
                  d.forEach(function (a) {
                    "redirect" === a &&
                      (e.hasClass("elementor-element-edit-mode") ||
                        (($url1 = e
                          .find(".eae-evergreen-wrapper")
                          .data("redirected-url")),
                        "" !== t.trim($url1) &&
                          (window.location.href = $url1))),
                      "hide" === a &&
                        (e.hasClass("elementor-element-edit-mode") ||
                          (e
                            .find("." + c)
                            .find(".timer-container")
                            .css("display", "none"),
                          e
                            .find("." + c)
                            .find(".egt-title")
                            .css("display", "none"))),
                      "message" === a &&
                        (e.hasClass("elementor-element-edit-mode") ||
                          e
                            .find("." + c)
                            .find(".eae-egt-message")
                            .css("display", "block")),
                      "hide_parent" === a &&
                        (e.hasClass("elementor-element-edit-mode") ||
                          (($p_secs = e.closest("section")),
                          $p_secs.css("display", "none")));
                  })
                )
              );
            if (2 === t.trim(l).length) {
              var p = "#eaeulSec1 li:eq( " + t.trim(l).charAt(1) + " )",
                f = "#eaeulSec li:eq( " + t.trim(l).charAt(0) + " )";
              e
                .find("." + c)
                .find(p)
                .next().length > 0
                ? (e
                    .find("." + c)
                    .find(p)
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find(p)
                    .next()
                    .addClass("flip-clock-before"))
                : (e
                    .find("." + c)
                    .find("#eaeulSec1 li:last-child")
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find("#eaeulSec1 li:first-child")
                    .addClass("flip-clock-before")),
                e
                  .find("." + c)
                  .find(f)
                  .next().length > 0
                  ? (e
                      .find("." + c)
                      .find(f)
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find(f)
                      .next()
                      .addClass("flip-clock-before"))
                  : (e
                      .find("." + c)
                      .find("#eaeulSec li:last-child")
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find("#eaeulSec li:first-child")
                      .addClass("flip-clock-before"));
            } else {
              (p = "#eaeulSec1 li:eq( " + t.trim(l).charAt(0) + " )"),
                (f = "#eaeulSec li:eq( 0 )");
              e
                .find("." + c)
                .find(p)
                .next().length > 0
                ? (e
                    .find("." + c)
                    .find(p)
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find(p)
                    .next()
                    .addClass("flip-clock-before"))
                : (e
                    .find("." + c)
                    .find("#eaeulSec1 li:last-child")
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find("#eaeulSec1 li:first-child")
                    .addClass("flip-clock-before")),
                e
                  .find("." + c)
                  .find(f)
                  .next().length > 0
                  ? (e
                      .find("." + c)
                      .find(f)
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find(f)
                      .next()
                      .addClass("flip-clock-before"))
                  : (e
                      .find("." + c)
                      .find("#eaeulSec li:last-child")
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find("#eaeulSec li:first-child")
                      .addClass("flip-clock-before"));
            }
            if (
              (e
                .find("." + c)
                .find("#eaeulMin1")
                .find(".flip-clock-active")
                .removeClass("flip-clock-active"),
              e
                .find("." + c)
                .find("#eaeulMin1")
                .find(".flip-clock-before")
                .removeClass("flip-clock-before"),
              e
                .find("." + c)
                .find("#eaeulMin")
                .find(".flip-clock-active")
                .removeClass("flip-clock-active"),
              e
                .find("." + c)
                .find("#eaeulMin")
                .find(".flip-clock-before")
                .removeClass("flip-clock-before"),
              2 == t.trim(s).length)
            ) {
              (p = "#eaeulMin1 li:eq( " + t.trim(s).charAt(1) + " )"),
                (f = "#eaeulMin li:eq( " + t.trim(s).charAt(0) + " )");
              e
                .find("." + c)
                .find(p)
                .next().length > 0
                ? (e
                    .find("." + c)
                    .find(p)
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find(p)
                    .next()
                    .addClass("flip-clock-before"))
                : (e
                    .find("." + c)
                    .find("#eaeulMin1 li:last-child")
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find("#eaeulMin1 li:first-child")
                    .addClass("flip-clock-before")),
                e
                  .find("." + c)
                  .find(f)
                  .next().length > 0
                  ? (e
                      .find("." + c)
                      .find(f)
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find(f)
                      .next()
                      .addClass("flip-clock-before"))
                  : (e
                      .find("." + c)
                      .find("#eaeulMin li:last-child")
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find("#eaeulMin li:first-child")
                      .addClass("flip-clock-before"));
            } else {
              (p = "#eaeulMin1 li:eq( " + t.trim(s).charAt(0) + " )"),
                (f = "#eaeulMin li:eq( 0 )");
              e
                .find("." + c)
                .find(p)
                .next().length > 0
                ? (e
                    .find("." + c)
                    .find(p)
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find(p)
                    .next()
                    .addClass("flip-clock-before"))
                : (e
                    .find("." + c)
                    .find("#eaeulMin1 li:last-child")
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find("#eaeulMin1 li:first-child")
                    .addClass("flip-clock-before")),
                e
                  .find("." + c)
                  .find(f)
                  .next().length > 0
                  ? (e
                      .find("." + c)
                      .find(f)
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find(f)
                      .next()
                      .addClass("flip-clock-before"))
                  : (e
                      .find("." + c)
                      .find("#eaeulMin li:last-child")
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find("#eaeulMin li:first-child")
                      .addClass("flip-clock-before"));
            }
            if (
              (e
                .find("." + c)
                .find("#eaeulHour1")
                .find(".flip-clock-active")
                .removeClass("flip-clock-active"),
              e
                .find("." + c)
                .find("#eaeulHour1")
                .find(".flip-clock-before")
                .removeClass("flip-clock-before"),
              e
                .find("." + c)
                .find("#eaeulHour")
                .find(".flip-clock-active")
                .removeClass("flip-clock-active"),
              e
                .find("." + c)
                .find("#eaeulHour")
                .find(".flip-clock-before")
                .removeClass("flip-clock-before"),
              2 == t.trim(o).length)
            ) {
              (p = "#eaeulHour1 li:eq( " + t.trim(o).charAt(1) + " )"),
                (f = "#eaeulHour li:eq( " + t.trim(o).charAt(0) + " )");
              e
                .find("." + c)
                .find(p)
                .next().length > 0
                ? (e
                    .find("." + c)
                    .find(p)
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find(p)
                    .next()
                    .addClass("flip-clock-before"))
                : (e
                    .find("." + c)
                    .find("#eaeulHour1 li:last-child")
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find("#eaeulHour1 li:first-child")
                    .addClass("flip-clock-before")),
                e
                  .find("." + c)
                  .find(f)
                  .next().length > 0
                  ? (e
                      .find("." + c)
                      .find(f)
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find(f)
                      .next()
                      .addClass("flip-clock-before"))
                  : (e
                      .find("." + c)
                      .find("#eaeulHour li:last-child")
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find("#eaeulHour li:first-child")
                      .addClass("flip-clock-before"));
            } else {
              (p = "#eaeulHour1 li:eq( " + t.trim(o).charAt(0) + " )"),
                (f = "#eaeulHour li:eq( 0 )");
              e
                .find("." + c)
                .find(p)
                .next().length > 0
                ? (e
                    .find("." + c)
                    .find(p)
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find(p)
                    .next()
                    .addClass("flip-clock-before"))
                : (e
                    .find("." + c)
                    .find("#eaeulHour1 li:last-child")
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find("#eaeulHour li:first-child")
                    .addClass("flip-clock-before")),
                e
                  .find("." + c)
                  .find(f)
                  .next().length > 0
                  ? (e
                      .find("." + c)
                      .find(f)
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find(f)
                      .next()
                      .addClass("flip-clock-before"))
                  : (e
                      .find("." + c)
                      .find("#eaeulHour li:last-child")
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find("#eaeulHour li:first-child")
                      .addClass("flip-clock-before"));
            }
            if (
              (e
                .find("." + c)
                .find("#eaeulDay1")
                .find(".flip-clock-active")
                .removeClass("flip-clock-active"),
              e
                .find("." + c)
                .find("#eaeulDay1")
                .find(".flip-clock-before")
                .removeClass("flip-clock-before"),
              e
                .find("." + c)
                .find("#eaeulDay")
                .find(".flip-clock-active")
                .removeClass("flip-clock-active"),
              e
                .find("." + c)
                .find("#eaeulDay")
                .find(".flip-clock-before")
                .removeClass("flip-clock-before"),
              2 == t.trim(r).length)
            ) {
              (p = "#eaeulDay1 li:eq( " + t.trim(r).charAt(1) + " )"),
                (f = "#eaeulDay li:eq( " + t.trim(r).charAt(0) + " )");
              e
                .find("." + c)
                .find(p)
                .next().length > 0
                ? (e
                    .find("." + c)
                    .find(p)
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find(p)
                    .next()
                    .addClass("flip-clock-before"))
                : (e
                    .find("." + c)
                    .find("#eaeulDay1 li:last-child")
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find("#eaeulDay1 li:first-child")
                    .addClass("flip-clock-before")),
                e
                  .find("." + c)
                  .find(f)
                  .next().length > 0
                  ? (e
                      .find("." + c)
                      .find(f)
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find(f)
                      .next()
                      .addClass("flip-clock-before"))
                  : (e
                      .find("." + c)
                      .find("#eaeulDay li:last-child")
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find("#eaeulDay li:first-child")
                      .addClass("flip-clock-before"));
            } else {
              (p = "#eaeulDay1 li:eq( " + t.trim(r).charAt(0) + " )"),
                (f = "#eaeulDay li:eq( 0 )");
              e
                .find("." + c)
                .find(p)
                .next().length > 0
                ? (e
                    .find("." + c)
                    .find(p)
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find(p)
                    .next()
                    .addClass("flip-clock-before"))
                : (e
                    .find("." + c)
                    .find("#eaeulDay1 li:last-child")
                    .addClass("flip-clock-active"),
                  e
                    .find("." + c)
                    .find("#eaeulDay li:first-child")
                    .addClass("flip-clock-before")),
                e
                  .find("." + c)
                  .find(f)
                  .next().length > 0
                  ? (e
                      .find("." + c)
                      .find(f)
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find(f)
                      .next()
                      .addClass("flip-clock-before"))
                  : (e
                      .find("." + c)
                      .find("#eaeulDay li:last-child")
                      .addClass("flip-clock-active"),
                    e
                      .find("." + c)
                      .find("#eaeulDay li:first-child")
                      .addClass("flip-clock-before"));
            }
          }, 1e3);
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-evergreen-timer.skin3",
        function (e, t) {
          var a,
            n = e.find(".eae-evergreen-wrapper").data("egtime"),
            o = e.find(".eae-evergreen-wrapper").data("egt-expire"),
            s = e.find(".eae-evergreen-wrapper").data("element-type"),
            l = "eae-" + e.find(".eae-evergreen-wrapper").data("id"),
            d = "eae-temp-" + e.find(".eae-evergreen-wrapper").data("id"),
            c = e.find(".eae-evergreen-wrapper").data("actions"),
            p = e.find(".eae-evergreen-wrapper").data("days"),
            f = e.find(".eae-evergreen-wrapper").data("hours"),
            u = e.find(".eae-evergreen-wrapper").data("mins"),
            m = e.find(".eae-evergreen-wrapper").data("seconds"),
            g = e.find(".eae-evergreen-wrapper").data("unqid"),
            h = new Date().getTime();
          if (!e.hasClass("elementor-element-edit-mode"))
            if ("countdown" === s) {
              (y = new Date(n)), (n = y.getTime());
              var v = "expires=" + y.toUTCString();
              document.cookie = d + "=" + y.getTime() + ";" + v + ";path=/";
            } else {
              var w = r(l),
                y = "";
              if ("" !== w) {
                (y = new Date(parseInt(w))).setSeconds(
                  y.getSeconds() +
                    e.find(".eae-evergreen-wrapper").data("egtime")
                ),
                  (n = y.getTime());
                var b = new Date(parseInt(w));
                b.setTime(b.getTime() + 60 * o * 60 * 1e3);
                var _ = "expires=" + b.toUTCString();
                document.cookie = l + "=" + w + ";" + _ + ";path=/";
                var k = new Date(parseInt(w));
                k.setTime(
                  k.getTime() +
                    1e3 * e.find(".eae-evergreen-wrapper").data("egtime")
                );
                v = "expires=" + k.toUTCString();
                n - h > 0 &&
                  (document.cookie = d + "=" + w + ";" + v + ";path=/");
              } else {
                (temp_date = n),
                  (y = new Date()).setSeconds(
                    y.getSeconds() +
                      e.find(".eae-evergreen-wrapper").data("egtime")
                  ),
                  (n = y.getTime()),
                  i(l, new Date().getTime(), o);
                var C = new Date();
                C.setTime(C.getTime() + 1e3 * temp_date);
                var x = "expires=" + C.toUTCString();
                document.cookie =
                  d + "=" + new Date().getTime() + ";" + x + ";path=/";
              }
            }
          if (!e.hasClass("elementor-element-edit-mode")) {
            var S = E(n);
            if (parseInt(S.all) < 1) {
              if (
                c.length > 0 &&
                (c.forEach(function (t) {
                  "redirect" === t &&
                    (e.hasClass("elementor-element-edit-mode") ||
                      (($url = e
                        .find(".eae-evergreen-wrapper")
                        .data("redirected-url")),
                      "" !== $url && (window.location.href = $url))),
                    "hide_parent" === t &&
                      (e.hasClass("elementor-element-edit-mode") ||
                        (($p_secs = e.closest("section")),
                        $p_secs.css("display", "none"))),
                    "hide" === t &&
                      (e.find("#timer").css("display", "none"),
                      e.find(".egt-title").css("display", "none"),
                      e.find(".desc").css("display", "none")),
                    "message" === t &&
                      e.find(".eae-egt-message").css("display", "block");
                }),
                1 === c.length && ("" === c[0] || "message" === c[0]))
              ) {
                var T = e.find("." + g).find("#timer")[0];
                "yes" === p &&
                  (T.innerHTML =
                    "<span class='egt-time eae-time-wrapper'><div>00</div></span>"),
                  "yes" === f &&
                    ("yes" === p
                      ? t(T).append(
                          "<span class='egt-time eae-time-wrapper'><div>00</div></span>"
                        )
                      : (T.innerHTML =
                          "<span class='egt-time eae-time-wrapper'><div>00</div></span>")),
                  "yes" === u &&
                    ("yes" === p || "yes" === f
                      ? t(T).append(
                          "<span class='egt-time eae-time-wrapper'><div>00</div></span>"
                        )
                      : (T.innerHTML =
                          "<span class='egt-time eae-time-wrapper'><div>00</div></span>")),
                  "yes" === m &&
                    ("yes" === p || "yes" === f || "yes" === u
                      ? t(T).append(
                          "<span class='egt-time eae-time-wrapper'><div>00</div></span>"
                        )
                      : (T.innerHTML =
                          "<span class='egt-time eae-time-wrapper'><div>00</div></span>"));
              }
              return;
            }
          }

          function E(e) {
            var t = n - new Date();
            return {
              days: Math.floor(t / 864e5),
              hours: "0" + Math.floor((t / 36e5) % 24),
              minutes: "0" + Math.floor((t / 6e4) % 60),
              seconds: "0" + Math.floor((t / 1e3) % 60),
              all: t,
            };
          }

          function L(e) {
            e.classList.add("fade"),
              setTimeout(function () {
                e.classList.remove("fade");
              }, 700);
          }
          e.hasClass("elementor-element-edit-mode") &&
            ("countdown" === s
              ? ((y = new Date(n)), (n = y.getTime()))
              : ((y = new Date()).setSeconds(
                  y.getSeconds() +
                    e.find(".eae-evergreen-wrapper").data("egtime")
                ),
                (n = y.getTime()))),
            E(n).all > 1 &&
              (a = setInterval(function () {
                var i = e.find("." + g).find("#timer")[0],
                  r = E(n);
                "yes" === p &&
                  (r.days < 10 && (r.days = "0" + r.days),
                  (i.innerHTML =
                    "<span class='egt-time eae-time-wrapper'><div>" +
                    r.days +
                    "</div></span>")),
                  "yes" === f &&
                    ("yes" === p
                      ? t(i).append(
                          "<span class='egt-time eae-time-wrapper'><div>" +
                            r.hours.slice(-2) +
                            "</div></span>"
                        )
                      : (i.innerHTML =
                          "<span class='egt-time eae-time-wrapper'><div>" +
                          r.hours.slice(-2) +
                          "</div></span>")),
                  "yes" === u &&
                    ("yes" === p || "yes" === f
                      ? t(i).append(
                          "<span class='egt-time eae-time-wrapper'><div>" +
                            r.minutes.slice(-2) +
                            "</div></span>"
                        )
                      : (i.innerHTML =
                          "<span class='egt-time eae-time-wrapper'><div>" +
                          r.minutes.slice(-2) +
                          "</div></span>")),
                  "yes" === m &&
                    ("yes" === p || "yes" === f || "yes" === u
                      ? t(i).append(
                          "<span class='egt-time eae-time-wrapper'><div>" +
                            r.seconds.slice(-2) +
                            "</div></span>"
                        )
                      : (i.innerHTML =
                          "<span class='egt-time eae-time-wrapper'><div>" +
                          r.seconds.slice(-2) +
                          "</div></span>"));
                var o = i.getElementsByTagName("span");
                "yes" === p &&
                  59 == r.hours &&
                  59 == r.minutes &&
                  59 == r.seconds &&
                  L(o[0]),
                  "yes" === f &&
                    ("yes" === p
                      ? 59 == r.minutes && 59 == r.seconds && L(o[1])
                      : 59 == r.minutes && 59 == r.seconds && L(o[0])),
                  "yes" === u &&
                    ("yes" === p
                      ? "yes" === f
                        ? 59 == r.seconds && L(o[2])
                        : 59 == r.seconds && L(o[1])
                      : "yes" === f
                      ? 59 == r.seconds && L(o[1])
                      : 59 == r.seconds && L(o[0])),
                  "yes" === m &&
                    ("yes" === p
                      ? "yes" === f
                        ? "yes" === u && L(o[3])
                        : L("yes" === u ? o[2] : o[1])
                      : "yes" === f
                      ? "yes" === u && L(o[2])
                      : L("yes" === u ? o[1] : o[0])),
                  r.all <= 1 &&
                    (clearInterval(a),
                    "yes" === p &&
                      (i.innerHTML =
                        "<span class='egt-time eae-time-wrapper'><div>00</div></span>"),
                    "yes" === f &&
                      ("yes" === p
                        ? t(i).append(
                            "<span class='egt-time eae-time-wrapper'><div>00</div></span>"
                          )
                        : (i.innerHTML =
                            "<span class='egt-time eae-time-wrapper'><div>00</div></span>")),
                    "yes" === u &&
                      ("yes" === p || "yes" === f
                        ? t(i).append(
                            "<span class='egt-time eae-time-wrapper'><div>00</div></span>"
                          )
                        : (i.innerHTML =
                            "<span class='egt-time eae-time-wrapper'><div>00</div></span>")),
                    "yes" === m &&
                      ("yes" === p || "yes" === f || "yes" === u
                        ? t(i).append(
                            "<span class='egt-time eae-time-wrapper'><div>00</div></span>"
                          )
                        : (i.innerHTML =
                            "<span class='egt-time eae-time-wrapper'><div>00</div></span>")),
                    e.hasClass("elementor-element-edit-mode") ||
                      (c.length > 0 &&
                        c.forEach(function (t) {
                          "redirect" === t &&
                            (($url1 = e
                              .find(".eae-evergreen-wrapper")
                              .data("redirected-url")),
                            "" !== $url1 && (window.location.href = $url1)),
                            "hide" === t &&
                              (e.find("#timer").css("display", "none"),
                              e.find(".egt-title").css("display", "none"),
                              e.find(".desc").css("display", "none")),
                            "message" === t &&
                              e
                                .find(".eae-egt-message")
                                .css("display", "block"),
                            "hide_parent" === t &&
                              (($p_secs = e.closest("section")),
                              $p_secs.css("display", "none"));
                        })));
              }, 1e3));
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-comparisontable.default",
        function (e, t) {
          t(e.find(".eae-ct-heading")[0]).addClass("active"),
            e.find("ul").on("click", "li", function () {
              var a = t(this).index() + 2;
              e.find("tr").find("td:not(:eq(0))").hide(),
                e.find("td:nth-child(" + a + ")").css("display", "table-cell"),
                e.find("tr").find("th:not(:eq(0))").hide(),
                e.find("li").removeClass("active"),
                t(this).addClass("active");
            });
          var a = window.matchMedia("(min-width: 767px)");

          function n(t) {
            t.matches
              ? e.find(".sep").attr("colspan", 5)
              : e.find(".sep").attr("colspan", 2);
          }
          a.addListener(n), n(a);
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-progress-bar.skin1",
        o
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-progress-bar.skin2",
        o
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-progress-bar.skin3",
        o
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-progress-bar.skin4",
        o
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-progress-bar.skin5",
        o
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-filterableGallery.default",
        function (e, t) {
          var a = e.find(".eae-fg-wrapper"),
            n = e.data("id"),
            i = a.attr("data-maxtilt"),
            r = a.attr("data-perspective"),
            o = a.attr("data-speed"),
            s = a.attr("data-tilt-axis"),
            l = a.attr("data-glare"),
            d = parseInt(a.attr("data-overlay-speed"));
          if (((s = "x" === s ? "y" : "y" === s ? "x" : "both"), "yes" === l))
            var c = a.attr("data-max-glare");
          l = "yes" === l;
          var p = t(".elementor-element-" + n + " .eae-fg-image"),
            f = a.hasClass("masonry-yes") ? "masonry" : "fitRows";
          p.outerHeight();
          (adata = {
            percentPosition: !0,
            animationOptions: {
              duration: 750,
              easing: "linear",
              queue: !1,
            },
          }),
            "fitRows" === f && (adata.layoutMode = "fitRows"),
            "masonry" === f &&
              (adata.masonry = {
                columnWidth: ".eae-gallery-item",
                horizontalOrder: !0,
              }),
            e.hasClass("eae-show-all-yes") ||
              (e.find(".eae-gallery-filter a").first().addClass("current"),
              (adata.filter = e
                .find(".eae-gallery-filter a")
                .first()
                .attr("data-filter")));
          var u = p.isotope(adata);
          u.imagesLoaded().progress(function () {
            u.isotope("layout");
          }),
            e.find(".eae-tilt-yes") &&
              ((atilt = {
                maxTilt: i,
                perspective: r,
                easing: "linear",
                scale: 1,
                speed: o,
                disableAxis: s,
                transition: !0,
                reset: !0,
                glare: l,
                maxGlare: c,
              }),
              e.find(".el-tilt").tilt(atilt)),
            t(".elementor-element-" + n + " .eae-gallery-filter a").on(
              "click",
              function () {
                e.find(".eae-gallery-filter .current").removeClass("current"),
                  t(this).addClass("current");
                var a = t(this).attr("data-filter");
                adata.filter = a;
                var n = p.isotope(adata);
                return (
                  n.imagesLoaded().progress(function () {
                    if ((n.isotope("layout"), isEditMode)) return !1;
                    e.find(".eae-tilt-yes") &&
                      (e.find(".el-tilt").tilt(atilt),
                      e.find(".el-tilt").tilt.reset.call(e.find(".el-tilt")));
                  }),
                  !1
                );
              }
            ),
            a.hasClass("eae-hover-direction-effect") ||
              e.find(".eae-gallery-item-inner").hover(function () {
                t(this).find(".eae-grid-overlay").addClass("animated");
              }),
            a.hasClass("eae-hover-direction-effect") &&
              (e.find(".eae-gallery-item-inner").hover(function () {
                t(this).find(".eae-grid-overlay").addClass("overlay");
              }),
              a.find(".eae-gallery-item-inner").EAEHoverDirection({
                speed: d,
              }));
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-content-switcher.skin1",
        s
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-content-switcher.skin2",
        s
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-content-switcher.skin3",
        l
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-content-switcher.skin4",
        l
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/global",
        function (e, t) {
          isEditMode ||
            (e.data("wts-url") &&
              "yes" == e.data("wts-link") &&
              e.on("click", function (t) {
                e.data("wts-url") && "yes" == e.data("wts-new-window")
                  ? window.open(e.data("wts-url"))
                  : (location.href = e.data("wts-url"));
              }));
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-thumbgallery.default",
        function (e, t) {
          (swiper_outer_wrapper = e.find(".eae-swiper-outer-wrapper")),
            (wid = e.data("id")),
            (wClass = ".elementor-element-" + wid),
            (thumb_outer_wrapper = e.find(".eae-gallery-thumbs"));
          let a = swiper_outer_wrapper.data("swiper-settings"),
            n =
              (swiper_outer_wrapper.data("slides-per-view"),
              swiper_outer_wrapper.data("space"),
              elementorFrontend.config.responsive.activeBreakpoints);
          sliderData = {
            direction: "horizontal",
            effect: a.effect,
            keyboard: {
              enabled: a.keyboard,
            },
            speed: a.speed,
            loop: "yes" === a.loop,
            thumbs: {
              swiper: {
                el: wClass + " .eae-gallery-thumbs",
                direction: "horizontal",
                navigation: {
                  nextEl: wClass + " .eae-swiper-button-next",
                  prevEl: wClass + " .eae-swiper-button-prev",
                },
                speed: a.speed,
                loop: "yes" === a.loop,
                freeMode: !0,
                watchSlidesVisibility: !0,
                watchSlidesProgress: !0,
                slideToClickedSlide: !0,
              },
            },
          };
          const i = {
            slidesPerView: "slidesPerView",
            slidesPerGroup: "slidesPerGroup",
            spaceBetween: "spaceBetween",
          };
          if (n.hasOwnProperty("mobile"))
            for (const e in i)
              a.hasOwnProperty(e) && (sliderData[e] = a[e].mobile),
                a.thumbs.hasOwnProperty(e) &&
                  (sliderData.thumbs.swiper[e] = a.thumbs[e].mobile);
          const r = {},
            o = {};
          a.hasOwnProperty("breakpoints_value") &&
            Object.keys(a.breakpoints_value).map((e) => {
              const t = parseInt(a.breakpoints_value[e]);
              if (("desktop" === e && (e = "default"), "mobile" !== e)) {
                const n = parseInt(a.spaceBetween[e]);
                r[t - 1] = {
                  spaceBetween: n,
                };
                const i = parseInt(a.thumbs.spaceBetween[e]),
                  s = parseInt(a.thumbs.slidesPerView[e]);
                o[t - 1] = {
                  spaceBetween: i,
                  slidesPerView: s,
                };
              }
            }),
            (sliderData.breakpoints = r),
            (sliderData.thumbs.swiper.breakpoints = o),
            void 0 !== a.autoplay &&
              (sliderData.thumbs.swiper.autoplay = {
                delay: a.autoplay.duration,
                disableOnInteraction: a.autoplay.disableOnInteraction,
                reverseDirection: a.autoplay.reverseDirection,
              }),
            "yes" == a.navigation &&
              (sliderData.navigation = {
                nextEl: wClass + " .eae-swiper-button-next",
                prevEl: wClass + " .eae-swiper-button-prev",
              }),
            "" !== a.pagination &&
              (sliderData.pagination = {
                type: a.pagination,
                el: wClass + " .swiper-pagination",
                clickable: a.clickable,
              }),
            void 0 !== a.autoplay &&
              (sliderData.autoplay = {
                delay: a.autoplay.duration,
                disableOnInteraction: a.autoplay.disableOnInteraction,
                reverseDirection: a.autoplay.reverseDirection,
              }),
            (swiperContainer = jQuery(
              ".elementor-element-" +
                wid +
                " .eae-swiper-outer-wrapper .eae-swiper-container"
            ));
          const s = elementorFrontend.utils.swiper;
          (null !== swiperContainer && 0 === swiperContainer.length) ||
            new s(jQuery(swiperContainer), sliderData).then((e) => {
              const t = e,
                n = a.pauseOnHover;
              if (
                ("yes" == a.loop && p(t, wid),
                "yes" == n && f(t, n, wid, a),
                void 0 !== a.autoplay)
              ) {
                "yes" == a.pauseOnHover &&
                  jQuery(wClass + " .eae-swiper-container").hover(
                    function () {
                      null != t &&
                        (t.autoplay.stop(), t.thumbs.swiper.autoplay.stop());
                    },
                    function () {
                      null != t &&
                        (t.autoplay.start(), t.thumbs.swiper.autoplay.start());
                    }
                  );
              }
            });
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-chart.bar",
        d
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-chart.horizontalBar",
        d
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-chart.line",
        d
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-data-table.default",
        function (e, t) {
          const a = e.find(".eae-table"),
            n = e.find(".eae-table-container");
          (lottie_class = e.find(".eae-lottie")),
            (settings = a.data("settings")),
            lottie_class.each(function () {
              let e = t(this).data("lottie-settings"),
                a = lottie.loadAnimation({
                  container: document.getElementById(e.id),
                  path: e.url,
                  renderer: "svg",
                  loop: e.loop,
                });
              1 == e.reverse && a.setDirection(-1);
            }),
            !0 === settings.sort
              ? ((head_class = t(
                  ".eae-table thead tr:not(:last-child)"
                ).addClass("eae-sort__ignoreRow")),
                a.tablesorter({
                  sortReset: !1,
                  sortRestart: !0,
                }))
              : (head_class = t(
                  ".eae-table thead tr:not(:last-child)"
                ).removeClass("eae-sort__ignoreRow")),
            settings.search &&
              n.find("#eae-searchable").keyup(function () {
                (_this = this),
                  a.find(".eae-table__body tr").each(function () {
                    -1 ===
                    t(this)
                      .text()
                      .toLowerCase()
                      .indexOf(t(_this).val().toLowerCase())
                      ? t(this).addClass("eae-table-search-hide")
                      : t(this).removeClass("eae-table-search-hide");
                  });
              });
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/CfStyler.default",
        function (e, t) {
          if (
            e.hasClass("elementor-element-edit-mode") &&
            t("#error-field-hidden").hasClass("validation-field-box")
          ) {
            e.find(".wpcf7-validates-as-required")
              .parent()
              .append("<p class='error-field'>The field is required.</p>");
          }
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-anythingcarousel.default",
        function (e, t) {
          const a = e.find(".eae-swiper-outer-wrapper"),
            n = e.data("id"),
            i = a.data("swiper-settings");
          c(i, n, e, a);
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/wts-content-ticker.default",
        function (e) {
          let t = e.data("id"),
            a = e.find(".swiper");
          swiper_outer = e.find(".eae-content-ticker-wrapper");
          let n = swiper_outer.data("swiper"),
            i = {};
          if (
            ((i = {
              effect: n.effect,
              loop: n.loop,
              speed: n.speed,
              slidesPerView: 1,
              spaceBetween: 30,
              fadeEffect: {
                crossFade: !0,
              },
            }),
            null != n.autoplayDuration &&
              (i.autoplay = {
                delay: n.autoplayDuration,
                disableOnInteraction: !0,
              }),
            0 != n.keyboardControl &&
              (i.keyboard = {
                enabled: !0,
              }),
            "yes" === n.arrows &&
              (i.navigation = {
                nextEl: ".eae-navigation-icon-wrapper .eae-swiper-button-next",
                prevEl: ".eae-navigation-icon-wrapper .eae-swiper-button-prev",
              }),
            "null" != n.direction &&
              "slide" == n.effect &&
              (i.direction = n.direction),
            null !== jQuery(a) && 0 === jQuery(a).length)
          )
            return;
          new (0, elementorFrontend.utils.swiper)(jQuery(a), i).then((e) => {
            let a = e;
            "true" == n.pauseOnHover &&
              jQuery(
                ".elementor-element-" +
                  t +
                  " .eae-content-ticker-content-wrapper"
              ).hover(
                function () {
                  a.autoplay.stop();
                },
                function () {
                  a.autoplay.start();
                }
              );
          });
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-radial-charts.default",
        function (e) {
          let t = null;
          $wid = e.data("id");
          const a = document.querySelector(".elementor-element-" + $wid),
            n = a.querySelector(".eae-radial-chart"),
            i =
              (a.querySelector(".eae-radial-chart-container").dataset.chart,
              e.find(".eae-radial-chart-container")),
            r = e.find(".eae-radial-chart");
          let o = i.data("chart");
          "polarArea" == o.type &&
            "true" == o.enablePercentage &&
            (o.options.scales.r.ticks.callback = function (e, t, a) {
              return `${e}%`;
            });
          new IntersectionObserver(
            (e, a) => {
              e.forEach((e) => {
                if (e.isIntersecting) {
                  e.target.classList.add("trigger"),
                    null == t && (t = new Chart(r, o));
                }
              });
            },
            {
              root: null,
              rootMargin: "0px 0px -300px 0px",
            }
          ).observe(n);
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-coupon-code.default",
        function (e) {
          elementorFrontend.elementsHandler.addHandler(u, {
            $element: e,
          });
        }
      ),
      elementorFrontend.hooks.addAction(
        "frontend/element_ready/eae-dropbar.default",
        function (e) {
          elementorFrontend.elementsHandler.addHandler(g, {
            $element: e,
          });
        }
      );
  });
})(jQuery);
